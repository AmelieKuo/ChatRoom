name: Deploy ChatRoom Frontstage (Nuxt SSR + Socket.IO)

on:
  push:
    branches:
      - main

env:
  PROJECT_NAME: chatroom
  SOCKETIO_NAME: socketio-server
  NODE_VERSION: 20.11.1
  BUILD_DIR: .output
  TAR_NAME: frontstage.tar.gz
  SOCKETIO_TAR_NAME: socketio.tar.gz
  REMOTE_BASE: /opt/project/chatroom/frontstage
  SOCKETIO_BASE: /opt/project/chatroom/socketio-server
  SERVER_IP: ${{ secrets.SERVER_IP }}
  SERVER_USER: ${{ secrets.SERVER_USER }}
  SSH_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 程式碼
        uses: actions/checkout@v3

      - name: 安裝 Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: 清除 Nuxt 舊資料夾（確保乾淨打包）
        run: rm -rf .nuxt .output node_modules

      - name: 安裝依賴與建置 Nuxt
        run: |
          echo "[1/3] 安裝 Nuxt 依賴"
          npm install
          echo "[2/3] Nuxt 專案打包"
          npm run build
          echo "[3/3] 壓縮 .output"
          tar -czf ${{ env.TAR_NAME }} .output

      - name: 壓縮 socketio-server
        run: |
          echo "[Socket.IO] 壓縮 Server 程式"
          tar -czf ${{ env.SOCKETIO_TAR_NAME }} socketio-server

      - name: 上傳壓縮檔至遠端
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ env.SERVER_IP }}
          username: ${{ env.SERVER_USER }}
          key: ${{ env.SSH_KEY }}
          source: |
            ${{ env.TAR_NAME }}
            ${{ env.SOCKETIO_TAR_NAME }}
          target: "~"

      - name: 遠端部署與 PM2 重啟
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ env.SERVER_IP }}
          username: ${{ env.SERVER_USER }}
          key: ${{ env.SSH_KEY }}
          script: |
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            nvm use ${{ env.NODE_VERSION }}

            echo "[Nuxt] 解壓並部署"
            mkdir -p ${{ env.REMOTE_BASE }}/current
            tar -xzf ~/${{ env.TAR_NAME }} -C ${{ env.REMOTE_BASE }}/current
            rm -f ~/${{ env.TAR_NAME }}

            echo "[Socket.IO] 解壓並部署"
            mkdir -p ${{ env.SOCKETIO_BASE }}
            tar -xzf ~/${{ env.SOCKETIO_TAR_NAME }} -C ${{ env.SOCKETIO_BASE }}
            rm -f ~/${{ env.SOCKETIO_TAR_NAME }}

            echo "[PM2] 重啟 Nuxt SSR"
            cd ${{ env.REMOTE_BASE }}/current/.output
            pm2 restart ${{ env.PROJECT_NAME }} || pm2 start server/index.mjs --name ${{ env.PROJECT_NAME }}

            echo "[PM2] 啟動 Socket.IO"
            cd ${{ env.SOCKETIO_BASE }}
            pm2 restart ${{ env.SOCKETIO_NAME }} || pm2 start index.js --name ${{ env.SOCKETIO_NAME }}

            pm2 save
