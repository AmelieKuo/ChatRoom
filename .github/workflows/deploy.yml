name: Deploy ChatRoom Frontstage (Nuxt SSR)

on:
  push:
    branches:
      - main

env:
  PROJECT_NAME: chatroom                     # 專案名稱，PM2 用
  NODE_VERSION: 20                           # Node.js 版本
  BUILD_DIR: .output                         # Nuxt build 後的資料夾
  TAR_NAME: frontstage.tar.gz                # 傳輸檔案名稱
  REMOTE_BASE: /home/AmelieKuo/project/chatroom/frontstage
  SERVER_IP: ${{ secrets.SERVER_IP }}
  SERVER_USER: ${{ secrets.SERVER_USER }}
  SSH_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 程式碼
        uses: actions/checkout@v3

      - name: 安裝 Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: 安裝依賴與建置 Nuxt
        run: |
          echo "[1/3] 安裝依賴"
          npm ci
          echo "[2/3] 建置 Nuxt 專案"
          npm run build
          echo "[3/3] 壓縮 .output 內容（不含外層）"
          mkdir temp_output && cp -r .output/* temp_output/
          tar -czf ${{ env.TAR_NAME }} -C temp_output .
          rm -rf temp_output

      - name: 上傳至遠端主機
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ env.SERVER_IP }}
          username: ${{ env.SERVER_USER }}
          key: ${{ env.SSH_KEY }}
          source: ${{ env.TAR_NAME }}
          target: "~"

      - name: 遠端部署與啟動 PM2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ env.SERVER_IP }}
          username: ${{ env.SERVER_USER }}
          key: ${{ env.SSH_KEY }}
          script: |
            echo "[1/6] 載入 NVM 與切換 Node.js 版本"
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            nvm use ${{ env.NODE_VERSION }}

            echo "[2/6] 備份 current 到 releases（不含 ecosystem.config.cjs）"
            timestamp=$(date +%Y%m%d%H%M%S)
            release_dir=${{ env.REMOTE_BASE }}/releases/$timestamp
            mkdir -p $release_dir
            if [ -d "${{ env.REMOTE_BASE }}/current" ]; then
              rsync -a --exclude="ecosystem.config.cjs" ${{ env.REMOTE_BASE }}/current/ $release_dir/
            fi

            echo "[3/6] 清空 current（保留 ecosystem.config.cjs）"
            find ${{ env.REMOTE_BASE }}/current -mindepth 1 ! -name "ecosystem.config.cjs" -exec rm -rf {} +

            echo "[4/6] 解壓新版本到 current"
            tar -xzf ~/${{ env.TAR_NAME }} -C ${{ env.REMOTE_BASE }}/current
            rm -f ~/${{ env.TAR_NAME }}

            echo "[5/6] 清除 releases 僅保留最新三版"
            ls -tp ${{ env.REMOTE_BASE }}/releases | grep -v '/$' | tail -n +4 | xargs -I {} rm -rf ${{ env.REMOTE_BASE }}/releases/{}

            echo "[6/6] 使用 PM2 重啟 Nuxt SSR"
            cd ${{ env.REMOTE_BASE }}/current
            pm2 delete ${{ env.PROJECT_NAME }} || true
            pm2 start server/index.mjs --name ${{ env.PROJECT_NAME }}
            pm2 save
